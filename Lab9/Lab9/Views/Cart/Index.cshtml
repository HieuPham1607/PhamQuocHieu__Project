@model IEnumerable<Lab9.Models.Cart>
@{
    ViewData["Title"] = "Danh sách sản phẩm";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    /* Định dạng chung */
    body {
        font-family: Arial, sans-serif;
        background-color: #f8f9fa;
        margin: 0;
        padding: 0;
    }

    h2, h3 {
        color: #007bff;
        text-align: center;
        margin-top: 20px;
        margin-bottom: 20px;
    }

    /* Định dạng giỏ hàng */
    .home-cart {
        padding: 20px;
    }

    .cart {
        background-color: #ffffff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .box-cart {
        margin-top: 20px;
    }

    .box-cart-item-box {
        padding: 10px;
    }

    .box-cart-border-bottom {
        border-bottom: 1px solid #ddd;
        padding: 10px 0;
    }

    .box-cart-item {
        display: flex;
        align-items: center;
    }

    .box-cart-item-img {
        width: 100px;
        height: auto;
        margin-right: 20px;
    }

    .box-cart-item h5 {
        margin: 0;
        font-size: 18px;
        color: #333;
    }

    .box-cart-item-btn {
        display: flex;
        align-items: center;
        margin-top: 10px;
    }

        .box-cart-item-btn .btn {
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 4px;
            padding: 5px 10px;
            margin: 0 5px;
            cursor: pointer;
        }

            .box-cart-item-btn .btn i {
                font-size: 14px;
            }

    .qty_input {
        width: 50px;
        text-align: center;
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 5px;
    }

    .box-cart-bill {
        margin-top: 30px;
        padding: 20px;
        background-color: #f1f1f1;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

        .box-cart-bill h3 {
            margin-bottom: 20px;
        }

        .box-cart-bill p {
            margin: 10px 0;
            font-size: 16px;
        }

        .box-cart-bill .cart-box {
            margin-top: 20px;
            padding: 10px;
            background-color: #007bff;
            color: #fff;
            border-radius: 8px;
            text-align: center;
        }

            .box-cart-bill .cart-box .group-btn {
                margin-top: 20px;
            }

            .box-cart-bill .cart-box .btn {
                display: block;
                width: 100%;
                padding: 10px;
                margin: 10px 0;
                font-size: 16px;
                color: #007bff;
                background-color: #fff;
                border: 2px solid #007bff;
                border-radius: 4px;
                text-align: center;
                text-decoration: none;
                cursor: pointer;
            }

                .box-cart-bill .cart-box .btn:hover {
                    background-color: #007bff;
                    color: #fff;
                }

    .box-cart-border-bottom .btn-action .btn {
        background-color: #dc3545;
        color: #fff;
        border: none;
        border-radius: 4px;
        padding: 5px 10px;
        cursor: pointer;
    }

        /* Thêm dấu "X" vào nút xóa */
        .box-cart-border-bottom .btn-action .btn.remove::after {
            content: '✖'; /* Thêm dấu "X" */
            font-size: 14px;
            margin-left: 5px;
        }

</style>
<div class="home-cart">
    <div class="row">
        <div class="col-md-12 cart ">
            <h2>GIỎ HÀNG</h2>
            <div class="box-cart">
                <div class="box-cart-item-box">
                    @foreach (var item in Model)
                    {
                        var money = item.Price * item.Quantity;
                        <div class="box-cart-border-bottom d-flex justify-content-between align-items-center">
                            <div class="box-cart-item d-flex justify-content-start align-items-center">
                                <img src="@item.Image" alt="@item.Name" class="box-cart-item-img" />
                                <div class="d-flex flex-column">
                                    <h5>@item.Name</h5>
                                    <div class="box-cart-item-btn">
                                        <button class="btn qty_btn"><i class="fa fa-minus"></i></button>
                                        <input type="number" class="qty_input" value="@item.Quantity" />
                                        <button class="btn qty_btn"><i class="fa fa-plus"></i></button>
                                    </div>
                                    <p data-price="@item.Price">Giá: <span>@string.Format("{0:#,##0}", @item.Price)</span>VND</p>
                                    <p data-money="@money" class="total-money">Thành tiền: <span id="money">@string.Format("{0:#,##0}", @money)</span>VND</p>
                                </div>
                            </div>
                            <div class="btn-action">
                                <a href="/cart/remove/?id=@item.Id" class="btn remove"><i class="fa-solid fa-xmark"></i></a>
                                <a href="/cart/update/?id=@item.Id&quantity=@item.Quantity" data-id="@item.Id" data-qty="@item.Quantity" class="btn update">Cập nhật</a>
                            </div>
                        </div>
                    }

                </div>
                <div class="box-cart-bill">
                    <h3> Tóm tắt đơn hàng </h3>
                    <p>
                        Tổng thành tiền:<span id="totalMoney">
                            @string.Format("{0:#,##0}", ViewBag.total)
                        </span> VND
                    </p>
                    <p>
                        Phí vận chuyển: <span class="ship-money">Free Ship</span><br>
                        <small>( Miễn phí vận chuyển với đơn hàng trên 10 triệu )</small>
                    </p>
                    <p>
                        Thông tin vận chuyển: Sản phẩm sẽ được Hoàng Hoan giao trong vòng 2-7 ngày.
                        Chi tiết liên hệ
                        <a href="tel:0978611889">0978 611 889</a>
                    </p>
                    <div class="cart-box cart-layout">
                        <div>
                            Tổng tiền :<span id="totalMoneyPay"> @string.Format("{0:#,##0}", ViewBag.total) </span> VND
                        </div>
                        <div class="group-btn">
                            <a href="/cart/orders" class="btn">Đặt hàng ngay</a>
                            <a href="/product" class="btn">Tiếp tục mua hàng</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $('.qty_btn .fa-minus').click(function () {
            let qty = parseInt($(this).parent().siblings('.qty_input').val());
            let price = parseFloat($(this).parent().parent().siblings('p').attr("data-price"));
            qty -= 1;
            let money = qty * price;
            $(this).parent().siblings('.qty_input').val(qty);
            let id = $(this).parent().parent().parent().parent().siblings('.btn-action').children('.update').attr("data-id");
            let href = "/cart/Update/?id=" + id + "&quantity=" + qty;
            $(this).parent().parent().parent().parent().siblings('.btn-action').children('.update').attr("href", href);
            $(this).parent().parent().siblings('p').attr("data-money", money);
            let total_money = formatMoney(money, 0, ",", ".");
            $(this).parent().parent().siblings('p').children("span#money").text(total_money);
            let totalMoney = formatMoney(total(), 0, ",", ".");
            $("#totalMoney").text(totalMoney);
            $("#totalMoneyPay").text(totalMoney);
        })
        $('.qty_btn .fa-plus').click(function () {
            let qty = parseInt($(this).parent().siblings('.qty_input').val());
            let price = parseFloat($(this).parent().parent().siblings('p').attr("data-price"));
            qty += 1;
            let money = qty * price;
            $(this).parent().siblings('.qty_input').val(qty);
            let id = $(this).parent().parent().parent().parent().siblings('.btn-action').children('.update').attr("data-id");
            let href = "/cart/Update/?id=" + id + "&quantity=" + qty;
            $(this).parent().parent().parent().parent().siblings('.btn-action').children('.update').attr("href", href);
            $(this).parent().parent().siblings('p').attr("data-money", money);
            let total_money = formatMoney(money, 0, ",", ".");
            $(this).parent().parent().siblings('p').children("span#money").text(total_money);
            let totalMoney = formatMoney(total(), 0, ",", ".");
            $("#totalMoney").text(totalMoney);
            $("#totalMoneyPay").text(totalMoney);
        })
        $('.qty_input').change(function () {
            let qty = parseInt($(this).val());
            let id = $(this).parent().parent().parent().siblings('.btn-action').children('.update').attr("data-id");
            let price = parseFloat($(this).parent().siblings('p').attr("data-price"));
            let money = qty * price;
            let href = "/cart/Update/?id=" + id + "&quantity=" + qty;
            $(this).parent().parent().parent().siblings('.btn-action').children('.update').attr("href", href);
            $(this).parent().parent().siblings('p').attr("data-money", money);
            let total_money = formatMoney(money, 0, ",", ".");
            $(this).parent().siblings('p').children("span#money").text(total_money)
            let totalMoney = formatMoney(total(), 0, ",", ".");
            $("#totalMoney").text(totalMoney);
            $("#totalMoneyPay").text(totalMoney);
        })

        function total() {
            let totalMoney = 0;
            $("p.total-money").each(function () {
                console.log($(this));
                console.log($(this).attr("data-money"));
                let money = parseFloat($(this).attr("data-money"));
                console.log("total-money", money);
                totalMoney += money;
            });
            return totalMoney;
        }

        total();

    })

    function formatMoney(amount, decimalCount = 2, decimal = ".", thousands = ",") {
        try {
            decimalCount = Math.abs(decimalCount);
            decimalCount = isNaN(decimalCount) ? 2 : decimalCount;

            const negativeSign = amount < 0 ? "-" : "";

            let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();
            let j = (i.length > 3) ? i.length % 3 : 0;

            return negativeSign +
                (j ? i.substr(0, j) + thousands : '') +
                i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + thousands) +
                (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : "");
        } catch (e) {
            console.log(e)
        }
    };
</script>